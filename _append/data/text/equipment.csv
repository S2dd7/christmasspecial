Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Tags,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: Before execute,Script: On Snap,Script: On Fury,Script: On Dodge
Tester,Enemy is weakened every turn|You deal [sword]-1 damage,2,,Catapult,,,RED,reducesize,noeffect,,,0,NO,NO,,,inflictself("test");,,,,,,,,,,,
The Divine Killer,Replaces current skillcard|Do [sword]25 damage|Doesn't effect bosses|When used is replaced,2,attack(25); sfxdamage(target[;] 25); self.replaceskillcard("Commandments");,Catapult,COMBINATION,,RED,reducesize,noeffect,,,0,NO,NO,combination:77777|skillcard,,giveequipment(~Sword~[;]true[;]true[;]e); self.replaceskillcard(e),,,,,,,,,,,
The Second Chance,Replaces current skillcard|Heal to max hp gain [reduce]2|When used is replaced,2,attackself(-999); sfx("_heal"); inflictself(REDUCE[;] 2); self.replaceskillcard("Commandments");,Catapult,COMBINATION,,GREEN,reducesize,noeffect,,,0,YES,NO,combination:77777|skillcard,,giveequipment(~Sword~[;]true[;]true[;]e); self.replaceskillcard(e),,,,,,,,,,,
The Middle Road,Replaces current skillcard|Do [sword]10 damage|Heal [heal]10 hp|When used is replaced,2,attack(10); sfxdamage(target[;] 10); attackself(-10); sfx("_heal"); self.replaceskillcard("Commandments");,Catapult,COMBINATION,,GRAY,reducesize,noeffect,,,0,NO,NO,combination:77777777|skillcard,,giveequipment(~Sword~[;]true[;]true[;]e); self.replaceskillcard(e),,,,,,,,,,,
Lady's Combo,Do [sword]12 damage,2,attack(12); sfxdamage(target[;] 12);,Pea Gun,COMBINATION,,RED,change_power,change_power,,,0,NO,NO,combination:456,,,,,,,,,,,,,
Lady's Combo_upgraded,Do [sword]12 damage,2,attack(12); sfxdamage(target[;] 12);,Pea Gun,COMBINATION,,RED,change_power,change_power,,,0,NO,NO,combination:777,,,,,,,,,,,,,
Lady's Combo_downgraded,Do [sword]12 damage,2,attack(12); sfxdamage(target[;] 12);,Pea Gun,COMBINATION,,RED,change_power,change_power,,,0,NO,NO,combination:12366,,,,,,,,,,,,,
Combination Lock,Do [sword]10 damage,2,attack(10); sfxdamage(target[;] 10);,Pea Gun,COMBINATION,,RED,change_power,change_power,,,0,NO,NO,combination:1221,,,,,,,,,,,,,
Combination Lock_upgraded,Do [sword]15 damage,2,attack(15); sfxdamage(target[;] 15);,Pea Gun,COMBINATION,,RED,change_power,change_power,,,0,NO,NO,combination:1997,,,,,,,,,,,,,
Combination Lock_downgraded,Do [sword]5 damage,2,attack(5); sfxdamage(target[;] 5);,Pea Gun,COMBINATION,,RED,change_power,change_power,,,0,NO,NO,combination:1997,,,,,,,,,,,,,
Slush Spell,Do [ice]5 damage|Inflict [shiver]2_Slush,1,inflict(~Slush~[;] 2); sfx(~_ice~); attack(5[;] ICE); sfxdamage(target[;] 5);,Atric Storm,REQUIRE1,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Slush Spell_upgraded,Do [ice]7 damage|Inflict [shiver]2_Slush,1,inflict(~Slush~[;] 2); sfx(~_ice~); attack(7[;] ICE); sfxdamage(target[;] 7);,Atric Storm,REQUIRE1,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Slush Spell_downgraded,Do [ice]5 damage,1,sfx(~_ice~); attack(7[;] ICE); sfxdamage(target[;] 5);,Atric Storm,REQUIRE1,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Doom Spell,Do [sword]5 damage|Inflict [skipturn]Timely_Demise,1,attack(5); sfxdamage(target[;]5); sfx(~_curse~[;]~~[;]0.2); inflict(~Demise~);,Disorient,REQUIRE2,,BLACK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Doom Spell_upgraded,Do [sword]5 damage|Inflict [skipturn]2_Timely_Demise,1,attack(5); sfxdamage(target[;]5); sfx(~_curse~[;]~~[;]0.2); inflict(~Demise~[;] 2);,Disorient,REQUIRE2,,BLACK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Doom Spell_downgraded,Do [sword]5 damage|Inflict [skipturn]Timely_Demise,1,attack(5); sfxdamage(target[;]5); sfx(~_curse~[;]~~[;]0.2); inflict(~Demise~);,Disorient,REQUIRE2|REQUIRE2,,BLACK,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Redshift Spell,Do [shock]4 damage|Shock all red items,1,attack(4[;] SHOCK); sfxdamage(target[;]4); if(simulation) { inflict(SHOCK); } if(!simulation) { var red = new elements.Equipment(~Fireball~).equipmentcol; var hasred = false; for(eq in self.equipment) { if(eq.equipmentcol == red) { hasred = true; break; } } if(hasred) inflict(~redshift~); else inflict(SHOCK); sfx(~_shock~); },Pea Gun,REQUIRE3,,RED,simplify,doublerequirements,,,0,NO,NO,,,,,,,,,,,,,
Regeneration Spell,Gain [grace]4_Regeneration,1,inflictself(~regeneration~[;] 4); sfx(~_cure~);,Regenerate,REQUIRE4,,PINK,change_power,noffect,,,0,YES,NO,,,,,,,,,,,,,
Regeneration Spell_upgraded,Gain [grace]5_Regeneration,1,inflictself(~regeneration~[;] 5); sfx(~_cure~);,Regenerate,REQUIRE4,,PINK,change_power,noffect,,,0,YES,NO,,,,,,,,,,,,,
Sweet Spell,Do [sword]3 damage|Inflict [heart]3 Too Sweet,1,inflict(~Too_Sweet~[;] 3); attack(3); sfxdamage(target[;]3);,Pea Gun,REQUIRE5,,RED,change_power,noffect,,,0,NO,NO,,,,,,,,,,,,,
Sweet Spell_upgraded,Do [sword]3 damage|Inflict [heart]5 Too Sweet,1,inflict(~Too_Sweet~[;] 5); attack(3); sfxdamage(target[;]3);,Pea Gun,REQUIRE5,,RED,change_power,noffect,,,0,NO,NO,,,,,,,,,,,,,
Snowcloud,Do [ice]<double> damage|Freeze ALL dice,2,inflict(ICE[;] ALL); sfx(~_ice~); attack(d * 2[;] ICE); sfxdamage(target[;] d * 2);,Arctic Storm,MAX3,,BRIGHTCYAN,increaserange,decreaserange,,,0,NO,NO,,,,,,,,,,,,,
Smack,Do [sword]4 damage,1,attack(d); sfxdamage(target[;] d);,Pea Gun,MAX3,,RED,simplify,complicate,,,0,NO,NO,,,,,,,,,,,,,
Slush Ball,Do [ice]<d6> damage|Inflict [shiver]Slush,1,inflict(~Slush~); sfx(~_ice~); attack(d[;] ICE); sfxdamage(target[;] d);,Slushie,ODD,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Slush Ball_upgraded,Do [ice]<d6> damage|Inflict [shiver]Slush,1,inflict(~Slush~); sfx(~_ice~); attack(d[;] ICE); sfxdamage(target[;] d);,Slushie,ODD|FREE1,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Slush Ball_downgraded,Do [ice]<d6> damage,1,sfx(~_ice~); attack(d[;] ICE); sfxdamage(target[;] d);,Slushie,ODD,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Slushie,Inflict [shiver]3 slush,2,inflict(~Slush~[;] 3); sfx(~_ice~);,Slushie,REQUIRE1|REQUIRE1,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Slushie_upgraded,Inflict [shiver]3 slush,2,inflict(~Slush~[;] 3); sfx(~_ice~);,Slushie,DOUBLES|DOUBLES,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Slushie_downgraded,Inflict [shiver]1 slush,2,inflict(~Slush~); sfx(~_ice~);,Slushie,REQUIRE1|REQUIRE1,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Freezer,In [jinx]<d6> turns[;]|freeze [ice]20 dice on self,1,jinx(~Freezer~[;]~Freeze [ice]%VAR% dice~[;]~Freeze [ice]%VAR% Dice~[;]~inflict(\~ice\~[;]%VAR%); sfx(\~_ice\~);~[;]self[;]self[;]d[;](20)); sfx(~_thinghappens~);,Refrigerator,ODD,,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Freezer_upgraded,In [jinx]<d6> turns[;]|freeze [ice]20 dice on self,1,jinx(~Freezer~[;]~Freeze [ice]%VAR% dice~[;]~Freeze [ice]%VAR% Dice~[;]~inflict(\~ice\~[;]%VAR%); sfx(\~_ice\~);~[;]self[;]self[;]d[;](20)); sfx(~_thinghappens~);,Refrigerator,NORMAL,,BRIGHTCYAN,,,,,0,YES,NO,,,,,,,,,,,,,
Freezer_downgraded,In [jinx]<d6> turns[;]|freeze [ice]20 dice on self,1,jinx(~Freezer~[;]~Freeze [ice]%VAR% dice~[;]~Freeze [ice]%VAR% Dice~[;]~inflict(\~ice\~[;]%VAR%); sfx(\~_ice\~);~[;]self[;]self[;]d[;](20)); sfx(~_thinghappens~);,Refrigerator,MIN3,,BRIGHTCYAN,,,,,0,YES,NO,,,,,,,,,,,,,
Cold Cut,Do [ice] 7 damage,2,sfx(~_ice~); attack(7[;] ICE); sfxdamage(target[;] 7);,Flash Freeze,REQUIRE1|REQUIRE1,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Cold Cut_upgraded,Do [ice] 7 damage,2,sfx(~_ice~); attack(7[;] ICE); sfxdamage(target[;] 7);,Flash Freeze,DOUBLES|DOUBLES,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Cold Cut_downgraded,Do [ice] 7 damage,2,sfx(~_ice~); attack(7[;] ICE); sfxdamage(target[;] 7);,Flash Freeze,REQUIRE1|REQUIRE1|REQUIRE1|REQUIRE1,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Candy Cane Spear,Do [sword]<d6> damage|Gain [regen]1 regen|,2,attack(d); sfxdamage(target[;] d); inflictself(~Regen~); sfx(~_cure~);,Candy Spear,ODD,,RED,change_power,change_power,,,2,NO,NO,,,,,,,,,,,,,
Candy Cane Spear_upgraded,Do [sword]<d6> damage|Gain [regen]2 regen|,2,attack(d); sfxdamage(target[;] d); inflictself(~Regen~); sfx(~_cure~);,Candy Spear,ODD,,RED,,,,,3,NO,NO,,,,,,,,,,,,,
Candy Cane Spear_downgraded,Do [sword]<d6> damage,2,attack(d); sfxdamage(target[;] d);,Candy Spear,ODD,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Christmas Vacation,Flee Immediately,1,flee(); bonus(10000000000000000);,Jetpack,ODD,,GREEN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Christmas Vacation_upgraded,Flee Immediately,1,flee(); bonus(10000000000000000);,Jetpack,NORMAL,,GREEN,,,,,0,YES,NO,,,,,,,,,,,,,
Christmas Vacation_downgraded,Flee Immediately,1,flee(); bonus(10000000000000000);,Jetpack,ODD|ODD|ODD,,GREEN,,,,,0,YES,NO,,,,,,,,,,,,,
AC Unit,Gain [fan]2 fan,1,inflictself(~Fan~[;] 2); sfx(~_ice~);,Refrigerator,ODD,,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
AC Unit_upgraded,Gain [fan]3 fan,1,inflictself(~Fan~[;] 3); sfx(~_ice~);,Refrigerator,ODD,,BRIGHTCYAN,,,,,0,YES,NO,,,,,,,,,,,,,
AC Unit_downgraded,Gain [fan]1 fan,1,inflictself(~Fan~); sfx(~_ice~);,Refrigerator,REQUIRE1,,BRIGHTCYAN,,,,,0,YES,NO,,,,,,,,,,,,,
Tree Shake,Receive 1-3 ornaments|Take [sword]1 dmg for each|Only on odd turns,2,var number = rand([2[;]3[;]4]); sfx(~_thinghappens~); while(number >= 1) { giveequipment(rand(getequipmentlist(null[;][~decor~][;][]))[;]true[;]false); attackself(1); sfxdamage(target[;] 1); number--; } if(self.spaceleft() <= 2){ bonus(-10000); },,NORMAL|NORMAL|NORMAL,,GREEN,change_power,change_power,,,0,YES,NO,,,e.dicehistory = [];,,if(turn % 2 == 1) { e.availablethisturn = true; } else { e.availablethisturn = false; e.unavailabletext = e.displayname + e.namemodifier; e.unavailabledetails = [~Unavailable (Even Turn)~]; },,,if(e.dicehistory.length > 0){ var dh = e.dicehistory[0].basevalue; if(e.remainingcountdown == dh ) { bonus(9999); } else { if(e.remainingcountdown <= dh) { bonus(-10 * dh); } else if(e.remainingcountdown  == dh) { bonus(10 * dh); } } e.dicehistory = []; },,,,,
Broken Ornament,Do [sword]<d6> damage|Inflict [bleed]1 bleed|[gray](once per battle),1,inflict(~Bleed~); sfx(~_poison~); attack(d); sfxdamage(target[;] d);,,NORMAL,,RED,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Tree Shake_upgraded,Receive 3-5 ornaments|Take [sword]1 dmg for each|Only on odd turns,2,var number = rand([3[;]4[;]5]); sfx(~_thinghappens~); while(number >= 1) { giveequipment(rand(getequipmentlist(null[;][~decor~][;][]))[;]true[;]false); attackself(1); sfxdamage(target[;] 1); number--; } if(self.spaceleft() <= 2){ bonus(-10000); },,NORMAL|NORMAL,9,GREEN,,,,,0,YES,NO,,,,,if(turn % 2 == 1) { e.availablethisturn = true; } else { e.availablethisturn = false; e.unavailabletext = e.displayname + e.namemodifier; e.unavailabledetails = [~Unavailable (Even Turn)~]; },,,,,,,,
Tree Shake_downgraded,Receive 1-3 ornaments|Take [sword]1 dmg for each|Only on odd turns,2,var number = rand([1[;]2[;]3]); sfx(~_thinghappens~); while(number >= 1) { giveequipment(rand(getequipmentlist(null[;][~decor~][;][]))[;]true[;]false); attackself(1); sfxdamage(target[;] 1); number--; } if(self.spaceleft() <= 2){ bonus(-10000); },,NORMAL|NORMAL|NORMAL|NORMAL,,GREEN,,,,,0,YES,NO,,,,,if(turn % 2 == 1) { e.availablethisturn = true; } else { e.availablethisturn = false; e.unavailabletext = e.displayname + e.namemodifier; e.unavailabledetails = [~Unavailable (Even Turn)~]; },,,,,,,,
Nutcracker_upgraded,Do [sword]<d6> damage|Triple if enemy is male,2,var namelist = [~Drake~[;]~Wicker Man~[;]~Snowman~[;]~Hothead~[;]~Wolf Puppy~[;]~Bully~[;]~Elf~[;]~Thief~[;]~Warrior~[;]~Buster~[;]~Cactus~[;]~Copycat~[;]~Cornelius~[;]~Cowboy~[;]~Fireman~[;]~Frog~[;]~Gargoyle~[;]~Handyman~[;]~Loud Bird~[;]~Magician~[;]~Pirate~[;]~Rat King~[;]~Rotten Apple~[;]~Rose~[;]~Skeleton~[;]~Sneezy~[;]~Space Marine~[;]~Sterohead~[;]~Sticky Hands~[;]~Vacuum~[;]~Warlock~[;]~Wizard~[;]~Yeti~[;]~Wisp~]; var doubledmg = false; for(name in namelist) { if(target.name == name) { doubledmg = true; break; } } if(doubledmg) { attack(d * 3); sfxdamage(target[;] d*3); } else { attack(d); sfxdamage(target[;] d); },,MAX5,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Nutcracker_downgraded,Do [sword]<d6> damage|Double if enemy is male,2,var namelist = [~Drake~[;]~Wicker Man~[;]~Snowman~[;]~Hothead~[;]~Wolf Puppy~[;]~Bully~[;]~Elf~[;]~Thief~[;]~Warrior~[;]~Buster~[;]~Cactus~[;]~Copycat~[;]~Cornelius~[;]~Cowboy~[;]~Fireman~[;]~Frog~[;]~Gargoyle~[;]~Handyman~[;]~Loud Bird~[;]~Magician~[;]~Pirate~[;]~Rat King~[;]~Rotten Apple~[;]~Rose~[;]~Skeleton~[;]~Sneezy~[;]~Space Marine~[;]~Sterohead~[;]~Sticky Hands~[;]~Vacuum~[;]~Warlock~[;]~Wizard~[;]~Yeti~[;]~Wisp~]; var doubledmg = false; for(name in namelist) { if(target.name == name) { doubledmg = true; break; } } if(doubledmg) { attack(d * 2); sfxdamage(target[;] d*2); } else { attack(d); sfxdamage(target[;] d); },,MAX4,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
All I Want,Do [sword]3 damage|Per [song]song on self|Lose all song,2,if(getstatusself(~Song~) > 4) { bonus(10000); } attack(getstatusself(~Song~)*3); sfxdamage(target[;] getstatusself(~Song~)*3); removestatusself(~Song~[;] ALL); sfx(~_song~);,,COUNTDOWN,10,RED,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
All I Want_upgraded,Do [sword]3 damage|Per [song]song on self|Lose all song,1,if(getstatusself(~Song~) > 4) { bonus(10000); } attack(getstatusself(~Song~)*3); sfxdamage(target[;] getstatusself(~Song~)*3); removestatusself(~Song~[;] ALL); sfx(~_song~);,,COUNTDOWN,8,RED,,,,,0,NO,NO,,,,,,,,,,,,,
All I Want_downgraded,Do [sword]2 damage|Per [song]song on self|Lose all song,2,attack(getstatusself(~Song~)*2); sfxdamage(target[;] getstatusself(~Song~)*2); removestatusself(~Song~[;] ALL); sfx(~_song~);,,COUNTDOWN,12,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Sing,Do [weaken]<d6> damage|Gain [song]3 song|On 8[;]gain 2 more,2,attack(d[;] WEAKEN); sfxdamage(target[;] d); sfx(~_weaken~); inflictself(~Song~[;] 3); sfx(~_song~); if(d == 8) inflictself(~Song~[;] 2);,,MAX4|MAX4,,ORANGE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Sing_upgraded,Do [weaken]<d6> damage|Gain [song]5 song|On 8[;]gain 2 more,2,attack(d[;] WEAKEN); sfxdamage(target[;] d); sfx(~_weaken~); inflictself(~Song~[;] 5); sfx(~_song~); if(d == 8) inflictself(~Song~[;] 2);,,MAX4|MAX4,,ORANGE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Sing_downgraded,Do [weaken]<d6> damage|Gain [song]song,2,attack(d[;] WEAKEN); sfxdamage(target[;] d); sfx(~_weaken~); inflictself(~Song~); sfx(~_song~);,,MAX3|MAX3,,ORANGE,,,,,0,NO,NO,,,,,,,,,,,,,
Mic Drop,Do [sword]<double> damage|Halve your song count,1,removestatusself(~Song~[;] getstatusself(~Song~) / 2); attack(d*2); sfxdamage(target[;] d*2);,,MAX3,,RED,change_power,change_power,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Mic Drop_upgraded,Do [sword]<double> damage|Halve your song count,1,removestatusself(~Song~[;] getstatusself(~Song~) / 2); attack(d*2); sfxdamage(target[;] d*2);,,MAX4,,RED,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Mic Drop_downgraded,Do [sword]<double> damage|Halve your song count,1,removestatusself(~Song~[;] getstatusself(~Song~) / 2); attack(d*2); sfxdamage(target[;] d*2);,,REQUIRE1,,RED,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Fire Ornament,Do [sword]<d6> damage|Inflict [fire]1 burn|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflict(FIRE); sfx(~_fire~);,,NORMAL,,RED,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Snowflake Ornament,Do [sword]<d6> damage|Inflict [ice]1 freeze|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflict(ICE); sfx(~_ice~);,,NORMAL,,BRIGHTCYAN,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Sharp Ornament,Do [sword]<d6> damage|[gray](once per battle),1,attack(d); sfxdamage(target[;] d);,,NORMAL|FREE2,,RED,change_power,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Sharp Ornament_upgraded,Do [sword]<d6> damage|[gray](once per battle),1,attack(d); sfxdamage(target[;] d);,,NORMAL|FREE4,,RED,,,,,0,NO,YES,decor,,,,,,,,,,,,
Toxic Ornament,Do [sword]<d6> damage|Inflict [poison]2 poison|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflict(POISON[;]2); sfx(~_poison~);,,NORMAL,,PURPLE,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Cursed Ornament,Do [sword]<d6> damage|Inflict [curse]1 curse|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflict(CURSE); sfx(~_curse~);,,NORMAL,,GREY,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Golden Star,Do [sword]7 damage|Inflict [blind]3 blind,1,attack(7); sfxdamage(target[;] 7); inflict(BLIND[;] 3); sfx(~_blind~); bonus(100);,,COUNTDOWN,7,YELLOW,change_power,change_power,,,0,NO,YES,decor,,,,,,,,,,,,
Golden Star_upgraded,Do [sword]12 damage|Inflict [blind]3 blind,1,attack(12); sfxdamage(target[;] 12); inflict(BLIND[;] 3); sfx(~_blind~); bonus(100);,,COUNTDOWN,7,YELLOW,,,,,0,NO,YES,decor,,,,,,,,,,,,
Golden Star_downgraded,Do [sword]7 damage|Inflict [blind]1 blind,1,attack(7); sfxdamage(target[;] 7); inflict(BLIND[;] 1); sfx(~_blind~); bonus(100);,,COUNTDOWN,7,YELLOW,,,,,0,NO,YES,decor,,,,,,,,,,,,
Wind Ornament,Do [sword]<d6> damage|Gain [dodge]1 dodge|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflictself(DODGE); sfx(~_dodge~);,,NORMAL,,YELLOW,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Heavy Ornament,Do [sword]<d6> damage|Inflict [weaken]1 weaken|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflict(WEAKEN); sfx(~_weaken~);,,NORMAL,,ORANGE,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Electric Ornament,Do [sword]<d6> damage|Inflict [shock]1 shock|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflict(SHOCK); sfx(~_shock~);,,NORMAL,,YELLOW,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Chain Ornament,Do [sword]<d6> damage|Inflict [lock]1 lock|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflict(LOCK); sfx(~_lock~);,,NORMAL,,GREY,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Armor Ornament,Do [sword]<d6> damage|Gain [reduce]1 reduce|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflictself(REDUCE); sfx(~_shield~);,,NORMAL,,ORANGE,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Barricade Ornament,Do [sword]<d6> damage|Gain [shield]4 shield|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflictself(SHIELD[;] 4); sfx(~_shield~);,,NORMAL,,ORANGE,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Boomerang Ornament,Do [sword]<d6> damage|Return the dice|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); givedice(d); sfx(~_metals~);,,NORMAL,,RED,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Mini Christmas Tree,Do [sword]<d6> damage|Gain an Ornament|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); sfx(~_thinghappens~); giveequipment(rand(getequipmentlist(null[;][~decor~][;][]))[;]true[;]false);,,NORMAL,,GREEN,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Snowglobe Ornament,Do [sword]<d6> damage|Inflict [shiver]1 slush|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflict(~Slush~); sfx(~_ice~);,,NORMAL,,BRIGHTCYAN,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Food Ornament,Do [sword]<d6> damage|Heal [heal]3 hp|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); attackself(-3); sfx(~_heal~);,,NORMAL,,GREEN,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Repeating Ornament,Do [sword]<d6> damage|Do it again in [jinx]2 turns|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); bonus(d * 20); jinx(~Repeater~[;]~take [sword]%VAR% damage~[;]~Take [sword]%VAR% damage~[;]~attack(%VAR%); sfxdamage(null[;] %VAR%);~[;]target[;]self[;]2[;]d); sfx(~_thinghappens~);,,NORMAL,,PINK,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Slide,Do [sword]<d6> damage|On even[;] freeze a dice,1,attack(d); if(d % 2 == 0) { inflict(ICE); sfx(~_ICE~[;]~~[;]0.2); } sfxdamage(target[;]d);,,MAX4|MAX4,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Slide_upgraded,Do [sword]<d6> damage|On even[;] freeze 2 dice,1,attack(d); if(d % 2 == 0) { inflict(ICE[;]2); sfx(~_ICE~[;]~~[;]0.2); } sfxdamage(target[;]d);,,MAX4|MAX4,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Slide_downgraded,Do [sword]<d6> damage|On even[;] freeze a dice,1,attack(d); if(d % 2 == 0) { inflict(ICE); sfx(~_ICE~[;]~~[;]0.2); } sfxdamage(target[;]d);,,MAX2|MAX2,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Downplayed Ornament,Do [weaken]<d6> damage|Inflict [powerdown]2 power down|[gray](once per battle),1,attack(d[;] WEAKEN); sfxdamage(target[;] d); inflict(~Powerdown~[;] 2); sfx(~_weaken~);,,NORMAL,,ORANGE,add2,complicate,,,0,NO,YES,decor,,,,,,,,,,,,
Card Reroll,Rerolls all cards,2,sfx(~_thinghappens~); runscript(~christmasspecial/warrior_dotide~[;][self[;]target[;]true]);,,COUNTDOWN,6,,,noeffect,,,0,YES,NO,cannotsteal|skillcard,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Palm Christmas Tree,Gain an Ornament,2,sfx(~_thinghappens~); giveequipment(rand(getequipmentlist(null[;][~decor~][;][]))[;]true[;]false);,,COUNTDOWN,10,GREEN,reducesize,noeffect,,,0,YES,NO,,,,,,,,,,,,,
Frozen Claw,Do [ice]<d6> damage|inflict [ice]1 freeze,1,attack(d[;] ICE); sfxdamage(target[;] d); inflict(ICE); sfx(~_ice~);,,MAX3,,BRIGHTCYAN,add2,decreaserange,,,0,NO,NO,,,,,,,,,,,,,
Frozen Slash,Do [ice]<d6> damage|inflicts [bleed]1 Bleed,2,attack(d[;] ICE); sfxdamage(target[;] d); inflict(~Bleed~); sfx(~_poison~);,,NORMAL|FREE2,,BRIGHTCYAN,add3,change_power,,,0,NO,NO,,,,,,,,,,,,,
Frozen Slash_downgraded,Do [ice]<d6> damage|inflict [ice]1 Freeze,2,attack(d[;] ICE); sfxdamage(target[;] d); inflict(ICE); sfx(~_ice~);,,NORMAL,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Self Consume,Heal [heal]<d6> health|In [jinx]<d6> turns[;]|take [sword]3 damage,1,attackself(-d); sfx(~_heal~); jinx(~Consume~[;]~take [sword]%VAR% damage~[;]~Take [sword]%VAR% damage~[;]~attack(%VAR%); sfxdamage(null[;] %VAR%);~[;]self[;]self[;]d[;]3); sfx(~_thinghappens~);,,MIN3,,GREEN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Self Consume_upgraded,Heal [heal]<d6> health|In [jinx]<d6> turns[;]|take [sword]1 damage,1,attackself(-d); sfx(~_heal~); jinx(~Consume~[;]~take [sword]%VAR% damage~[;]~Take [sword]%VAR% damage~[;]~attack(%VAR%); sfxdamage(null[;] %VAR%);~[;]self[;]self[;]d[;]1); sfx(~_thinghappens~);,,NORMAL,,GREEN,,,,,0,YES,NO,,,,,,,,,,,,,
Self Consume_downgraded,Heal [heal]<d6> health|In [jinx]<d6> turns[;]|take [sword]6 damage,1,attackself(-d); sfx(~_heal~); jinx(~Consume~[;]~take [sword]%VAR% damage~[;]~Take [sword]%VAR% damage~[;]~attack(%VAR%); sfxdamage(null[;] %VAR%);~[;]self[;]self[;]d[;]6); sfx(~_thinghappens~);,,MIN3,,GREEN,,,,,0,YES,NO,,,,,,,,,,,,,
Gumdrop Throw,Do [fire]6 damage|Inflict [heart]2 Too Sweet,1,attack(6[;] FIRE); sfxdamage(target[;] 6); inflict(~Too Sweet~[;] 2); sfx(~_cure~);,,COUNTDOWN,12,RED,threequartercountdown,change_power,,,0,NO,NO,,,,,,,,,,,,,
Gumdrop Throw_downgraded,Do [fire]5 damage|Inflict [heart]1 Too Sweet,1,attack(5[;] FIRE); sfxdamage(target[;] 5); inflict(~Too Sweet~); sfx(~_cure~);,,COUNTDOWN,12,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Candy Cane,Do [sword]6 damage|Returns a dice,2,var returndice = rand([actualdice[0].basevalue[;]actualdice[1].basevalue]); givedice(returndice); attack(6); sfxdamage(target[;] 6);,,NORMAL|NORMAL,8,RED,change_power,changetotal12,,,0,NO,NO,,,,,,,,,,,,,
Candy Cane_upgraded,Do [sword]6 damage|Returns a dice,2,var returndice = rand([actualdice[0].basevalue[;]actualdice[1].basevalue]); givedice(returndice); attack(6); sfxdamage(target[;] 6);,,NORMAL|NORMAL,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Gift Bag,Gives 3 toys|Only on odd turns,2,giveequipment(rand(getequipmentlist(null[;][~toy~][;][]))[;]true[;]false); giveequipment(rand(getequipmentlist(null[;][~toy~][;][]))[;]true[;]false); giveequipment(rand(getequipmentlist(null[;][~toy~][;][]))[;]true[;]false); sfx(~_thinghappens~);,,NORMAL|NORMAL|NORMAL|NORMAL,,RED,change_power,change_power,,,0,YES,NO,shockimmune|curseavoid|cannotreuse,,,,if(turn % 2 == 1) { e.availablethisturn = true; } else { e.availablethisturn = false; e.unavailabletext = e.displayname + e.namemodifier; e.unavailabledetails = [~Unavailable (Even Turn)~]; },,,,,,,,
Gift Bag_upgraded,Gives 4 toys|Only on odd turns,2,giveequipment(rand(getequipmentlist(null[;][~toy~][;][]))[;]true[;]false); giveequipment(rand(getequipmentlist(null[;][~toy~][;][]))[;]true[;]false); giveequipment(rand(getequipmentlist(null[;][~toy~][;][]))[;]true[;]false); sfx(~_thinghappens~);,,NORMAL|NORMAL|NORMAL|NORMAL,,RED,,,,,0,YES,NO,shockavoid|curseavoid|cannotreuse,,,,if(turn % 2 == 1) { e.availablethisturn = true; } else { e.availablethisturn = false; e.unavailabletext = e.displayname + e.namemodifier; e.unavailabledetails = [~Unavailable (Even Turn)~]; },,,,,,,,
Gift Bag_downgraded,Gives 2 toys|Only on odd turns,2,giveequipment(rand(getequipmentlist(null[;][~toy~][;][]))[;]true[;]false); giveequipment(rand(getequipmentlist(null[;][~toy~][;][]))[;]true[;]false); sfx(~_thinghappens~);,,MAX5|MIN2|MIN2|MAX5,,RED,,,,,0,YES,NO,,,,,if(turn % 2 == 1) { e.availablethisturn = true; } else { e.availablethisturn = false; e.unavailabletext = e.displayname + e.namemodifier; e.unavailabledetails = [~Unavailable (Even Turn)~]; },,,,,,,,
Train,Do [sword]<d6> damage|Gain [dodge]1 dodge|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflictself(DODGE); sfx(~_dodge~);,,NORMAL|NORMAL,,YELLOW,change_power,decreaserange,,,0,NO,YES,toy,,,,,,,,,,,,
Train_upgraded,Do [sword]<d6> damage|Gain [dodge]2 dodge|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflictself(DODGE[;] 2); sfx(~_dodge~);,,NORMAL|NORMAL,,YELLOW,,,,,0,NO,YES,toy,,,,,,,,,,,,
Wind Up Car,Do [sword]10 damage|[gray](once per battle),1,attack(10); sfxdamage(target[;] 10);,,COUNTDOWN,9,,halfcountdown,change_power,,,0,NO,YES,toy,,,,,,,,,,,,
Wind Up Car_downgraded,Do [sword]5 damage|[gray](once per battle),1,attack(5); sfxdamage(target[;] 5);,,COUNTDOWN,9,,,,,,0,NO,YES,toy,,,,,,,,,,,,
Nerf Gun,Do [sword]<d6> damage|[gray](once per battle),1,attack(d); sfxdamage(target[;] d);,,MAX5|FREE3,,RED,add4,change_power,,,0,NO,YES,toy,,,,,,,,,,,,
Nerf Gun_downgraded,Do [sword]<d6> damage|[gray](once per battle),1,attack(d); sfxdamage(target[;] d);,,MAX5|FREE1,,RED,,,,,0,NO,YES,toy,,,,,,,,,,,,
Candy Stockings,Heal [heal]<double> for [jinx]3 turns,1,for(i in 1...4) { jinx(~Candy Stocking~[;]~heal [heal]~ + (i * 2) + ~ health~[;]~Heal [heal]~ + (i * 2) + ~ health~[;]~attack(-%VAR% * 2); sfx(\~_heal\~);~[;]self[;]self[;]i[;]d); } sfx(~_thinghappens~);,,MAX3,,GREEN,increaserange,decreaserange,,,0,YES,YES,toy,,,,,,,,,,,,
Toy Phone,Do [sword]<d6> damage|in 2 turns[;] do [sword]<double> damage|[gray](once per battle),1,jinx(~Telephone~[;]~take [sword]~ + (d * 2) + ~ damage~[;]~Take [sword]~ + (d * 2) + ~ damage~[;]~attack(%VAR% * 2); sfxdamage(null[;]%VAR% * 2);~[;]target[;]self[;]2[;]d); attack(d); sfxdamage(target[;]d); sfx(~_thinghappens~);,,MAX4,,PINK,increaserange,decreaserange,,,0,NO,YES,toy,,,,,,,,,,,,
Slushie Maker,Do [ice]<d6> damage[;]|freeze 1 dice[;] inflict [shiver]Slush|[gray](once per battle),1,attack(d); sfxdamage(target[;] d); inflict(~Slush~); inflict(ICE); sfx(~_ice~);,,NORMAL|FREE4,,BRIGHTCYAN,add5,complicate,,,0,NO,YES,toy,,,,,,,,,,,,
Desk Fan,Heal [heal]<d6> health|Gain [fan]3 fan|[gray](once per battle),1,inflictself(~Fan~[;] 3); sfx(~_ice~); attackself(-d); sfx(~_heal~);,,NORMAL,,BRIGHTCYAN,add2,complicate,,,0,YES,YES,toy,,,,,,,,,,,,
Bag Hit,Do [sword]3 damage,1,attack(3); sfxdamage(target[;] d);,,MAX3,,RED,change_power,noeffect,,,0,NO,NO,,,,,,,,,,,,,
Bag Hit_upgraded,Do [sword]5 damage,1,attack(5); sfxdamage(target[;] d);,,MAX3,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Thieving Tools@spanner,Combine both dice|Change Tools,2,givedice(d); if(e.usesleft == 0) { var a = new elements.Skill(~thiefyboi~); var act = new motion.actuators.SimpleActuator(null[;] 0.1[;] null); act.onRepeat(a.execute[;] [self[;]target]); act.move(); },,NORMAL|NORMAL,,GRAY,,,,,2,YES,NO,cannotsteal|skillcard,,,,,,,,,,,,
Thieving Tools@bump,+1 to dice value|Change Tools on 2nd use|,2,givedice(d+1); if(e.usesleft == 0) { var a = new elements.Skill(~thiefyboi~); var act = new motion.actuators.SimpleActuator(null[;] 0.1[;] null); act.onRepeat(a.execute[;] [self[;]target]); act.move(); },,NORMAL,,GRAY,,,,,2,YES,NO,cannotsteal|skillcard,,,,,,,,,,,,
Thieving Tools@nudge,-1 to dice value|Change Tools on 2nd use|,2,givedice(d-1); if(e.usesleft == 0) { var a = new elements.Skill(~thiefyboi~); var act = new motion.actuators.SimpleActuator(null[;] 0.1[;] null); act.onRepeat(a.execute[;] [self[;]target]); act.move(); },,MIN2,,GRAY,,,,,2,YES,NO,cannotsteal|skillcard,,,,,,,,,,,,
Thieving Tools@pick,Split dice into 2|Change Tools on 2nd use|,2,givedice(split(d)[;] ~splitdice~); if(e.usesleft == 0) { var a = new elements.Skill(~thiefyboi~); var act = new motion.actuators.SimpleActuator(null[;] 0.1[;] null); act.onRepeat(a.execute[;] [self[;]target]); act.move(); },,NORMAL,,GRAY,,,,,2,YES,NO,cannotsteal|skillcard,,,,,,,,,,,,
Thieving Tools@dupli,Duplicate dice|Change Tools on 2nd use|,2,givedice([d[;]d]); if(e.usesleft == 0) { var a = new elements.Skill(~thiefyboi~); var act = new motion.actuators.SimpleActuator(null[;] 0.1[;] null); act.onRepeat(a.execute[;] [self[;]target]); act.move(); },,NORMAL,,GRAY,,,,,2,YES,NO,cannotsteal|skillcard,,,,,,,,,,,,
Thieving Tools@vise,Get 2 of the difference|Change Tools on 2nd use|,2,var bigdice = 0; var smalldice = 7; for(ad in actualdice) { if(ad.basevalue > bigdice) bigdice = ad.basevalue; if(ad.basevalue < smalldice) smalldice = ad.basevalue; } if((bigdice - smalldice) >= 1) givedice([(bigdice - smalldice)[;](bigdice - smalldice)][;] ~combinedice~);,,NORMAL|NORMAL,,GRAY,,,,,2,YES,NO,cannotsteal|skillcard,,,,,,,,,,,,
Thieving Tools@roll,Reroll this dice|Change Tools on 2nd use|,2,givedice(); if(e.usesleft == 0) { var a = new elements.Skill(~thiefyboi~); var act = new motion.actuators.SimpleActuator(null[;] 0.1[;] null); act.onRepeat(a.execute[;] [self[;]target]); act.move(); },,NORMAL,,GRAY,,,,,2,YES,NO,cannotsteal|skillcard,,,,,,,,,,,,
Thieving Tools@screw,Do [sword]<d6> damage|Change Tools on 2nd use|,2,attack(d); sfxdamage(target[;] d); trace(e.usesleft); if(e.usesleft == 0) { var a = new elements.Skill(~thiefyboi~); var act = new motion.actuators.SimpleActuator(null[;] 0.1[;] null); act.onRepeat(a.execute[;] [self[;]target]); act.move(); },,MAX5,,GRAY,,,,,2,NO,NO,cannotsteal|skillcard,,,,,,,,,,,,
Backhand,Do [fire]<d6> damage|Inflict [sting]Sting,2,attack(d[;] FIRE); sfxdamage(target[;] d); sfx(~_fire~); inflict(~Sting~);,,MAX3|MIN3,,RED,change_power,changetotal9,,,0,NO,NO,,,,,,,,,,,,,
Backhand_upgraded,Do [fire]<d6> damage|Inflict [sting]Sting,2,attack(d[;] FIRE); sfxdamage(target[;] d); sfx(~_fire~); inflict(~Sting~);,,MAX4|MIN4,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Segway,Gain [dodge]1 dodge,2,inflictself(DODGE); sfx(~_dodge~);,,COUNTDOWN,12,YELLOW,threequartercountdown,noeffect,,,0,YES,NO,,,,,,,,,,,,,
Climate Change,Inflict enemy's [fire] amount|as [ice][;] and vice versa,2,inflict(ICE[;] getstatus(FIRE)); inflict(FIRE[;] getstatus(ICE)); sfx(~_ice~); sfx(~_fire~);,Blue Flame,COUNTDOWN,6,RED,reducesize,noeffect,,,0,NO,NO,,,,,,,,,,,,,
Contained Blast,Do [fire]2 dmg per [fire] on enemy|Do [ice]2 dmg per [ice] on enemy,2,attack(getstatus(FIRE) * 2[;] FIRE); attack(getstatus(ICE) * 2[;] ICE); sfxdamage(target[;] getstatus(ICE) * 2); sfxdamage(target[;] getstatus(FIRE) * 2);,Blue Flame,EVEN|EVEN,,RED,change_power,doublerequirements,,,0,NO,NO,,,,,,,,,,,,,
Contained Blast_upgraded,Do [fire]3 dmg per [fire] on enemy|Do [ice]3 dmg per [ice] on enemy,2,attack(getstatus(FIRE) * 3[;] FIRE); attack(getstatus(ICE) * 3[;] ICE); sfxdamage(target[;] getstatus(ICE) * 3)); sfxdamage(target[;] getstatus(FIRE) * 3));,Firebomb,NORMAL|NORMAL,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Heavily Wrapped Gift,Contains...|The Best Item in the Game,2,giveequipment(~The Best Item in the Game~[;] true[;] false[;] e); sfx(~_thinghappens~);,,COUNTDOWN,50,YELLOW,halfcountdown,noeffect,,,0,YES,NO,excludefromrandomlists,,e.remainingcountdown = self.getvar(~count~);,self.setvar(~count~[;]e.remainingcountdown);,,,,,,,,,
The Best Item in the Game,Drain [heart]<double> health,2,drain(d * 2); sfx(~_drain~);,,MAX5,,RED,simplify,noeffect,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Present Shotgun,Do [sword]<double> damage|Gain a random item,2,attack(d * 2); sfx(~_thinghappens~); giveequipment(rand(getequipmentlist(null[;][][;][~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~[;]~onceperbattle~]))[;] -1); sfxdamage(target[;] d * 2);,,MAX3,,RED,increaserange,change_power,,,0,NO,NO,,,,,,,,,,,,,
Present Shotgun_downgraded,Do [sword]<d6> damage|Gain a random item,2,attack(d); sfx(~_thinghappens~); giveequipment(rand(getequipmentlist(null[;][][;][~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~[;]~onceperbattle~]))[;] -1); sfxdamage(target[;] d);,,MAX3,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Combat Bump,Dice value +1|,2,if(d >= 6){ givedice([6[;] 1]); } else { givedice(d + 1); },,NORMAL,,,,,,,2,YES,NO,shockavoid|weakenavoid|curseavoid|cannotsteal,,,,,,,,,,,,
Combat Roll@witch,Reroll a dice|[gray](Reuseable),2,givedice();,,NORMAL,,,,,,,2,YES,NO,cannotsteal|excludefromrandomlists|shockavoid|weakenavoid|curseavoid,,,,,,,,,,,,
Peck,Do [sword]1 damage,1,attack(1); sfxdamage(target[;] 1);,Pea Gun,NORMAL,,BRIGHTCYAN,change_power,complicate,,,0,NO,NO,,,,,,,,,,,,,
Peck_upgraded,Do [sword]3 damage,1,attack(3); sfxdamage(target[;] 3);,Pea Gun,NORMAL,,BRIGHTCYAN,,,,,0,NO,NO,,,,,,,,,,,,,
Final Frost[],[blue]frost|Do [ice]2 damage|per [ice] on enemy,2,attack(getstatus(ICE) * 2); sfxdamage(target[;] getstatus(ICE) * 2); sfx(~_ice~);,,,,BLUE,,noeffect,,,0,NO,NO,finale|powercard,,,,,,,,,,,,
Warm Coat,Do [fire]2 damage,1,attack(2[;] FIRE); sfxdamage(target[;] 2);,,REQUIRE1,,RED,change_power,doublerequirements,,,0,NO,NO,,,,,,,,,,,,,
Warm Coat_upgraded,Do [fire]4 damage,1,attack(4[;] FIRE); sfxdamage(target[;] 4);,,REQUIRE1,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Christmas Dagger,Do [sword]<d6> damage|([red]Ch[green]an[red]ge[green]s[red] [green]C[red]o[green]lo[red]r[green]s)|,1,attack(d); sfxdamage(target[;] d); e.changecolour(rand([~RED~[;]~GREEN~]));,Pea Gun,MAX3,,RED,change_power,decreaserange,,,-1,NO,NO,,,,,e.changecolour(rand([~RED~[;]~GREEN~]));,,e.changecolour(rand([~RED~[;]~GREEN~]));,e.changecolour(rand([~RED~[;]~GREEN~]));,,,,,
Christmas Dagger_upgraded,Do [sword]<d6> damage|([red]Ch[green]an[red]ge[green]s[red] [green]C[red]o[green]lo[red]r[green]s)|,1,attack(d); sfxdamage(target[;] d); if (e.equipmentcol == 2) { inflict(~FIRE~); sfx(~_fire~); } else if (e.equipmentcol == 3) { attackself(-3); sfx(~_heal~); },Pea Gun,MAX3,,RED,,,,,-1,NO,NO,,,,,e.changecolour(rand([~RED~[;]~GREEN~]));,,e.changecolour(rand([~RED~[;]~GREEN~]));,e.changecolour(rand([~RED~[;]~GREEN~]));,,,,,
Time Travel,Switches Ghost types,1,if(!simulation) { var ghost = rand([~Ghost of Future~[;]~Ghost of Present~[;]~Ghost of Past~]); self.name = ghost; sfx(~_thinghappens~); bonus(1000000000000000000000000); if(self.name == ~Ghost of Future~) { self.destroyallequipment(); giveequipment([~Space Food~][;]true[;]false); giveequipment([~Laser Rifle~][;]true[;]false); giveequipment([~Time Travel~][;]true[;]false); } if(self.name == ~Ghost of Present~) { self.destroyallequipment(); giveequipment([~Global Warming~][;]true[;]false); giveequipment([~Pollution~][;]true[;]false); giveequipment([~Time Travel~][;]true[;]false); } if(self.name == ~Ghost of Past~) { self.destroyallequipment(); giveequipment([~Tap Dance~][;]true[;]false); giveequipment([~Lead Pipe Hit~][;]true[;]false); giveequipment([~Time Travel~][;]true[;]false); } },,COUNTDOWN,2,GREEN,halfcountdown,noeffect,,,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Lead Pipe Hit,Do [sword]<d6> damage,1,attack(d); sfxdamage(target[;] d);,,MAX4|FREE4,,RED,change_power,decreaserange,,,0,NO,NO,,,,,,,,,,,,,
Lead Pipe Hit_upgraded,Do [sword]<d6> damage,1,attack(d); sfxdamage(target[;] d);,,MAX4|FREE6,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Tap Dance,Do [sword]<d6> damage|on 6 or 2[;] gain [dodge],1,attack(d); if(d == 6) inflictself(DODGE); if(d == 6) { sfx(~_dodge~[;]~~[;]0.2); } if(d == 2) inflictself(DODGE); if(d == 2) { sfx(~_dodge~[;]~~[;]0.2); } sfxdamage(target[;]d);,,MAX4|MAX4,,YELLOW,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Tap Dance_upgraded,Do [sword]<d6> damage|on 8 or 2[;] gain [dodge],1,attack(d); if(d == 8) inflictself(DODGE); if(d == 8) { sfx(~_dodge~[;]~~[;]0.2); } if(d == 2) inflictself(DODGE); if(d == 2) { sfx(~_dodge~[;]~~[;]0.2); } sfxdamage(target[;]d);,,MAX5|MAX5,,YELLOW,,,,,0,NO,NO,,,,,,,,,,,,,
Tap Dance_downgraded,Do [sword]<d6> damage|on 2[;] gain [dodge],1,attack(d); if(d == 2) inflictself(DODGE); if(d == 2) { sfx(~_dodge~[;]~~[;]0.2); } sfxdamage(target[;]d);,,MAX4|MAX4,,YELLOW,,,,,0,NO,NO,,,,,,,,,,,,,
Space Food,Heal [heal]2 health|If excess[;] do [sword]4 damage|,2,attackself(-2); sfx(~_heal~); if(self.hp + 2 > self.maxhp) { attack(4); sfxdamage(target[;]4); },,ODD,,GREEN,change_power,doublerequirements,,,2,YES,NO,,,,,,,,,,if(self.hp + 2 > self.maxhp) { e.castdirection = -1; } else { e.castdirection = 1; },,,
Space Food_upgraded,Heal [heal]4 health|If excess[;] do [sword]6 damage|,2,attackself(-4); sfx(~_heal~); if(self.hp + 2 > self.maxhp) { attack(6); sfxdamage(target[;]6); },,ODD,,GREEN,,,,,2,YES,NO,,,,,,,,,,if(self.hp + 4 > self.maxhp) { e.castdirection = -1; } else { e.castdirection = 1; },,,
Laser Rifle,Do [sword]<d6> damage|,1,attack(d); sfxdamage(target[;] d);,,ODD|FREE1,,RED,change_power,removereusable,,,2,NO,NO,,,,,,,,,,,,,
Laser Rifle_upgraded,Do [sword]<d6> damage|,1,attack(d); sfxdamage(target[;] d);,,EVEN|FREE1,,RED,,,,,2,NO,NO,,,,,,,,,,,,,
Pollution,Inflict 3[poison] poison,2,inflict(POISON[;] 3); sfx(~_poison~);,,MAX2|MAX3,,PURPLE,change_power,decreaserange,,,0,NO,NO,,,,,,,,,,,,,
Global Warming,Do [fire]<d6> +<timesused> damage|Add 1 for each time used|,1,attack(d[;] FIRE); sfxdamage(target[;] d); attack(e.timesused+1);,,MAX3,,RED,change_power,removereusable,,,2,NO,NO,,,,,,,,,,,,,
Global Warming_upgraded,Do [fire]<d6> +<timesused> damage|Add 1 for each time used|,1,attack(d[;] FIRE); sfxdamage(target[;] d); attack(e.timesused+1);,,MAX4,,RED,,,,,3,NO,NO,,,,,,,,,,,,,
Pollution_upgraded,Inflict 5[poison] poison,2,inflict(POISON[;] 5); sfx(~_poison~);,,MAX4|MAX4,,PURPLE,,,,,0,NO,NO,,,,,,,,,,,,,
BOOO!,Enemy loses [song]1,1,removestatus(~Song~); sfx(~_song~);,,COUNTDOWN,10,ORANGE,change_power,noeffect,,,0,NO,NO,immunetotide,,,,,,,,,,,,
BOOO!_upgraded,Enemy loses [song]2,1,removestatus(~Song~[;] 2); sfx(~_song~);,,COUNTDOWN,10,ORANGE,,,,,0,NO,NO,immunetotide,,,,,,,,,,,,
Cycle,Choose another card|,2,,,NORMAL,,GRAY,,,,,-1,YES,NO,cannotsteal|excludefromrandomlists,,self.setvar(~wj-initialized~[;]0);,for(eq in self.equipment) { eq.removetag(~chained~); eq.removetag(~alreadyunchained~); },runscript(~christmasspecial/jester_beforestartturn~[;][self]);,,if(!onlimit) { var eq = self.lastequipmentused; if((!eq.hastag(~immunetochain~)) && (eq.usesleft == 0 # eq == e)) runscript(~christmasspecial/jester_dochaining~[;][self]); },,,,,,
Ice Skates,Gain [dodge]Dodge[;] but get|[ice]Frozen next turn,1,inflictself(DODGE); sfx(~_dodge~); sfx(~_thinghappens~[;]~~[;]0.2); jinx(~Ice Skates~[;]~receive [ice]1 freeze~[;]~Receive [ice]1 freeze~[;]~inflict(ICE); sfx(\~_ice\~);~[;]self[;]self[;]1[;]0);,Quick Thinking,DOUBLES|DOUBLES,,BRIGHTCYAN,simplify,complicate,,,0,YES,NO,,,,,,,,,,,,,
Fire Boots,Gain [dodge]Dodge[;] but get|[fire]Burned next turn,1,inflictself(DODGE); sfx(~_dodge~); sfx(~_thinghappens~[;]~~[;]0.2); jinx(~Fire Boots~[;]~receive [fire]1 burn~[;]~Receive [fire]1 burn~[;]~inflict(FIRE); sfx(\~_fire\~);~[;]self[;]self[;]1[;]0);,Quick Thinking,DOUBLES|DOUBLES,,RED,simplify,complicate,,,0,YES,NO,,,,,,,,,,,,,
Shiny Sword,Do [sword]<d6> damage. On start|of turn[;] if active[;] do [sword]3,2,attack(d); sfxdamage(target[;]d);,,NORMAL,,YELLOW,add1,complicate,,,0,NO,NO,,,,,,if(e.availablethisturn) { e.animate(~flashandshake~); attack(3); sfxdamage(target[;]3); },,,,,,,
Chaingun,Do [sword]<d6> dmg[;] cycle cards|(ignores cycle),1,attack(d); sfxdamage(target[;]d); runscript(~christmasspecial/jester_dochaining~[;][self]);,,MAX5,,GRAY,simplify,complicate,,,0,NO,NO,immunetochain|excludefromrandomlists,,,,,,,,,,,,
Chainbump,Dice value +1|(ignores cycle),1,if(d >= 6){ givedice([6[;] 1]); } else { givedice(d + 1); },,NORMAL,,GRAY,change_power,complicate,,,0,YES,NO,immunetochain|excludefromrandomlists,,,,,,,,,,,,
Chainbump_upgraded,Dice +1 (ignores cycle)|,1,if(d >= 6){ givedice([6[;] 1]); } else { givedice(d + 1); },,NORMAL,,GRAY,,,,,2,YES,NO,immunetochain|excludefromrandomlists,,,,,,,,,,,,
Christmas Revolver,Do [sword]<var:6rolls> damage|+3 per 6 rolled,2,var arrayname = 0; for(dicename in self.dicepool) { if(dicename.basevalue == 6) { arrayname += 3; } } self.setvar(~6rolls~[;]arrayname); attack(arrayname); sfxdamage(target[;] arrayname);,,REQUIRE6,,RED,simplify,doublerequirements,,,0,NO,NO,,,,,,var arrayname = 0; for(dicename in self.dicepool) { if(dicename.basevalue == 6) { arrayname += 3; } } self.setvar(~6rolls~[;]arrayname);,var arrayname = 0; for(dicename in self.dicepool) { if(dicename.basevalue == 6) { arrayname += 3; } } self.setvar(~6rolls~[;]arrayname);,var arrayname = 0; for(dicename in self.dicepool) { if(dicename.basevalue == 6) { arrayname += 3; } } self.setvar(~6rolls~[;]arrayname);,,,,,
Christmas Pistol,Do [sword]2 damage|On <var:randomdice> return dice|,1,if(d == self.getvar(~randomdice~)){ givedice(d); }  self.setvar(~randomdice~[;]rand([1[;]2[;]3[;]4[;]5[;]6])); attack(2); sfxdamage(target[;]d);,,NORMAL,,RED,change_power,change_power,,,5,NO,NO,,,self.setvar(~randomdice~[;]rand([1[;]2[;]3[;]4[;]5[;]6]));,,,,,,,,,,
Christmas Pistol_upgraded,Do [sword]2 damage|On <var:randomdice> return dice likely on 6|,1,if(d == self.getvar(~randomdice~)){ givedice(d); }  self.setvar(~randomdice~[;]rand([1[;]2[;]3[;]4[;]5[;]6[;]6[;]6])); attack(2); sfxdamage(target[;]d);,,NORMAL,,RED,change_power,change_power,,,5,NO,NO,,,self.setvar(~randomdice~[;]rand([1[;]2[;]3[;]4[;]5[;]6[;]6[;]6[;]6]));,,,,,,,,,,
Christmas Pistol_downgraded,Do [sword]2 damage|On <var:randomdice> return dice|,1,if(d == self.getvar(~randomdice~)){ givedice(d); }  self.setvar(~randomdice~[;]rand([1[;]2[;]3[;]4[;]5[;]6])); attack(2); sfxdamage(target[;]d);,,NORMAL,,RED,change_power,change_power,,,2,NO,NO,,,self.setvar(~randomdice~[;]rand([1[;]2[;]3[;]4[;]5[;]6]));,,,,,,,,,,
Pip Master,Reroll a dice|Do [sword]1 per pip changed,1,var rand = rand([1[;]2[;]3[;]4[;]5[;]6]); givedice(rand); if (rand != d) { var large = d; var small = rand; if(rand > d) { large = rand; small = d; } attack(large - small); sfxdamage(target[;] large - small); },,NORMAL,,GREEN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,givedice();
Pip Master_upgraded,Reroll a dice|Do [sword]2 per pip changed,1,var rand = rand([1[;]2[;]3[;]4[;]5[;]6]); givedice(rand); if (rand != d) { var large = d; var small = rand; if(rand > d) { large = rand; small = d; } attack((large - small) * 2); sfxdamage(target[;] (large - small) * 2); },,NORMAL,,GREEN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,givedice();
Pip Master_downgraded,Reroll a dice|Do [sword]1 per pip changed,1,var rand = rand([1[;]2[;]3[;]4[;]5[;]6]); givedice(rand); if (rand != d) { var large = d; var small = rand; if(rand > d) { large = rand; small = d; } attack(large - small); sfxdamage(target[;] large - small); },,MIN4,,GREEN,,,,,0,NO,NO,,,,,,,,,,,,,givedice();
Doom and Gloom,Do [sword]<d6> damage|[80%]On even inflict [skipturn]Timely_Demise,2,attack(d); if(d % 2 == 0) inflict(~Demise~); if(d % 2 == 1) { sfxdamage(target[;]d); } else { sfxdamage(target[;]d); sfx(~_curse~[;]~~[;]0.2); },Plasma Gun,NORMAL,,BLACK,change_power,decreaserange,,,0,NO,NO,,,,,,,,,,,,,
Doom and Gloom_upgraded,Do [sword]<d6> damage|[80%]On even inflict [skipturn]2 Timely_Demise,2,attack(d); if(d % 2 == 0) inflict(~Demise~[;] 2); if(d % 2 == 1) { sfxdamage(target[;]d); } else { sfxdamage(target[;]d); sfx(~_curse~[;]~~[;]0.2); },Plasma Gun,NORMAL,,BLACK,change_power,decreaserange,,,0,NO,NO,,,,,,,,,,,,,
12 Days Of Christmas,Do [sword]3 damage|Inflict [skipturn]3 Timely Demise,1,attack(3); sfxdamage(target[;]3); sfx(~_curse~[;]~~[;]0.2); inflict(~Demise~[;] 3);,,COUNTDOWN,10,BLACK,change_power,noeffect,,,0,NO,NO,,,,,,,,,,,,,
12 Days Of Christmas_upgraded,Do [sword]4 damage|Inflict [skipturn]4 Timely Demise,1,attack(4); sfxdamage(target[;]4); sfx(~_curse~[;]~~[;]0.2); inflict(~Demise~[;] 4);,,COUNTDOWN,10,BLACK,change_power,noeffect,,,0,NO,NO,,,,,,,,,,,,,
Roll Tracker,Tracks your rolls,2,,,,,GRAY,change_power,,,none,0,NO,NO,excludefromrandomlists,,,,self.setvar(~rollindex~[;]0); if(self.getvar(~baserolls~).length == null) { trace(~selfvar error!~); e.fulldescription = ~Something went wrong![newline]Please report this!![newline][newline](Clicking calculate will[newline]abruptly crash your game)~; } else { self.setvar(~rolls~[;]self.getvar(~baserolls~)); self.setvar(~updatecounter~[;]0); var i = self.getvar(~rollindex~); var rolls = self.getvar(~rolls~); var roll_list = rolls.slice(i[;]rolls.length-1); roll_list = roll_list.concat(rolls.slice(0[;]i)); e.fulldescription = ~Your next rolls are:[newline]~ + roll_list.join(); },,if(self.getvar(~updatecounter~)) { var i = self.getvar(~rollindex~); var rolls = self.getvar(~rolls~); var roll_list = rolls.slice(i[;]rolls.length-1); roll_list = roll_list.concat(rolls.slice(0[;]i)); e.fulldescription = ~Your next rolls are:[newline]~ + roll_list.join(); e.animate(~flash~); self.setvar(~updatecounter~[;]0); },,,,,,
Roll Tracker_upgraded,Tracks your rolls|Odd rolls reduce CPU,2,,,,,GRAY,,,,none,0,NO,NO,excludefromrandomlists,,,,self.setvar(~rollindex~[;]0); if(self.getvar(~baserolls~).length == null) { trace(~selfvar error!~); e.fulldescription = ~Something went wrong![newline]Please report this!![newline][newline](Clicking calculate will[newline]abruptly crash your game)~; } else { self.setvar(~rolls~[;]self.getvar(~baserolls~)); self.setvar(~updatecounter~[;]0); var i = self.getvar(~rollindex~); var rolls = self.getvar(~rolls~); var roll_list = rolls.slice(i[;]rolls.length-1); roll_list = roll_list.concat(rolls.slice(0[;]i)); e.fulldescription = ~Your next rolls are:[newline]~ + roll_list.join(); } inflictself(~oddcpureduce~);,,if(self.getvar(~updatecounter~)) { var i = self.getvar(~rollindex~); var rolls = self.getvar(~rolls~); var roll_list = rolls.slice(i[;]rolls.length-1); roll_list = roll_list.concat(rolls.slice(0[;]i)); e.fulldescription = ~Your next rolls are:[newline]~ + roll_list.join() + ~[newline][newline]Odd rolls reduce CPU[newline]instead of increasing it.~; e.animate(~flash~); self.setvar(~updatecounter~[;]0); },,,,,,
Reset,Reset cpu (testing)|,1,adjustrobotcounter(-self.roll_total);,,NORMAL,,GRAY,,,,none,-1,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Flip,Flip next rolls|,1,,,NORMAL,,ORANGE,,,,,-1,YES,NO,excludefromrandomlists,,,,,,,,,var newrolls = []; for(v in self.getvar(~rolls~)) { newrolls.push(7-v); } newrolls[newrolls.length-1] = 0; trace(newrolls); self.setvar(~rolls~[;]newrolls); self.setvar(~updatecounter~[;]1);,,,
Reverse,Reverse roll order|,1,,,NORMAL,,ORANGE,,,,,-1,YES,NO,excludefromrandomlists,,,,,,,,,var newrolls = self.getvar(~rolls~); newrolls.reverse(); newrolls.push(0); newrolls.shift(); trace(newrolls); self.setvar(~rolls~[;]newrolls); self.setvar(~rollindex~[;]newrolls.length - self.getvar(~rollindex~)); self.setvar(~updatecounter~[;]1);,,,
Freeze,Set rolls to|111111,1,,,NORMAL,,BRIGHTCYAN,,,,,0,YES,NO,excludefromrandomlists,,,,,,,,,self.setvar(~rolls~[;][1[;]1[;]1[;]1[;]1[;]1[;]0]); self.setvar(~rollindex~[;]0); self.setvar(~updatecounter~[;]1);,,,
Confetti Popper,Do [sword]<d6> damage|Skip the next dice roll,1,attack(d); sfxdamage(target[;]d);,,MAX5,,YELLOW,simplify,decreaserange,,,0,NO,NO,excludefromrandomlists,,,,,,,,,self.setvar(~rollindex~[;]self.getvar(~rollindex~)+1); if(!self.getvar(~rolls~)[self.getvar(~rollindex~)]) self.setvar(~rollindex~[;]0); self.setvar(~updatecounter~[;]1);,,,
Garbage Collector,Next roll reduces CPU|instead of increasing it,1,inflictself(~reversecpu~);,,EVEN,,GRAY,simplify,complicate,,,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Sequence Break,Skip the next <d6> rolls,1,,,MAX3,,YELLOW,,,,,0,YES,NO,excludefromrandomlists,,,,,,,,,var i = self.getvar(~rollindex~); i+=d; if(i >= self.getvar(~rolls~).length) i-=self.getvar(~rolls~).length; if(!self.getvar(~rolls~)[i]) i = 0; self.setvar(~rollindex~[;]i); self.setvar(~updatecounter~[;]1);,,,
Wrong Answer,Do [sword]1 damage[;] and|heal completely,2,attack(1); attackself(-self.maxhp); target.removestatus(ALL); sfxdamage(target[;]1);,,NORMAL,,GREEN,change_power,change_power,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Wrong Answer_upgraded,Do [sword]3 damage[;] and|heal completely,2,attack(3); attackself(-self.maxhp); target.removestatus(ALL); sfxdamage(target[;]3);,,NORMAL,,GREEN,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Wrong Answer_downgraded,Heal completely,2,attackself(-self.maxhp); target.removestatus(ALL);,,NORMAL,,GREEN,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Frozen Gloves@robot,Do [ice]<d6> damage[;]|freeze yourself,2,attack(d); sfxdamage(target[;]d); inflictself(~robotfreeze~);,,NORMAL,,BRIGHTCYAN,,,,,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,inflictself(~robotfreeze~);
Commandments,Get a new commandment every turn,2,,,,,GRAY,,,,,0,NO,YES,skillcard,,,,var text = runscript(~christmasspecial/commandments.hx~[;][ALL]); e.fulldescription = text + ~[newline](Get a new commandment[newline]every turn.)~; inflictself(~commandment~),,,,,,,,
Commandments@status,Replaces current skillcard|(Get a new status-related|commandment and 50%|chance to inflict a|random status each turn.),2,,,,,YELLOW,,,,,0,NO,NO,skillcard,,giveequipment(~Sword~[;]true[;]true[;]e); self.replaceskillcard(e),,var text = runscript(~christmasspecial/commandments.hx~[;][~status~]); e.fulldescription = text + ~[newline](Get a new status-related[newline]commandment and 50%[newline]chance to inflict a[newline]random status each turn.)~; inflictself(~commandment~); inflict(rand(loadtext(~christmasspecial/randomeffects~))),,,,,,,,,
Frozen Slash_upgraded,Do [ice]<d6> damage|inflicts [bleed]1 Bleed,2,attack(d[;] ICE); sfxdamage(target[;] d); inflict(~Bleed~); sfx(~_poison~);,,NORMAL|FREE3,,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Head of Krampus,Deal dmg equal to 20%|of enemy's current HP,1,sfxdamage(target[;]target.hp / 5); attack(target.hp / 5);,Hellfire,ODD,,RED,change_power,complicate,,,0,NO,NO,,1,,,,,,,,,,,
Head of Krampus_upgraded,Deal dmg equal to 25%|of enemy's current HP,1,sfxdamage(target[;]target.hp / 4); attack(target.hp / 4);,Hellfire,ODD,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Divine Throwing Axe,Do [sword]<d6> damage|Next turn do [sword]<d6>/ 2 damage,2,attack(d); sfxdamage(target[;] d); jinx(~Repeater~[;]~take [sword]%VAR% damage~[;]~Take [sword]%VAR% damage~[;]~attack(%VAR%); sfxdamage(null[;] %VAR%);~[;]target[;]self[;]2[;]d/2); sfx(~_thinghappens~);,,RANGE24,,RED,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Throwing Axe_upgraded,Do [sword]<d6> damage|Next turn do [sword]<d6> damage,2,attack(d); sfxdamage(target[;] d); jinx(~Repeater~[;]~take [sword]%VAR% damage~[;]~Take [sword]%VAR% damage~[;]~attack(%VAR%); sfxdamage(null[;] %VAR%);~[;]target[;]self[;]2[;]d); sfx(~_thinghappens~);,,RANGE24,,RED,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Throwing Axe_downgraded,Do [sword]<d6> damage|Next turn take [sword]<d6>/ 2 damage,2,attack(d); sfxdamage(target[;] d); jinx(~Repeater~[;]~take [sword]%VAR% damage~[;]~Take [sword]%VAR% damage~[;]~attack(%VAR%); sfxdamage(null[;] %VAR%);~[;]self[;]self[;]2[;]d/2); sfx(~_thinghappens~);,,RANGE24,,RED,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Incantation,Roll 2 6's next turn,2,inflictself(~stash~+6[;]2); inflictself(~illuminate~);,,MIN5,,RED,simplify,doublerequirements,,,0,YES,NO,,,,,,,,,,,,,
Soul Crush,Drain [heart]<d6> health|Get 2 3's,2,drain(d); sfx(~_drain~); givedice([3[;]3]);,,REQUIRE6,,RED,simplify,change_power,,,0,NO,NO,,,,,,,,,,,,,
Soul Crush_downgraded,Drain [heart]<d6> health,2,drain(d); sfx(~_drain~);,,REQUIRE6,,RED,simplify,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Throwing Dagger,Do [sword]<var:dagger> damage|+[sword]1 each use|,2,attack(self.getvar(~dagger~)); self.setvar(~dagger~[;] self.getvar(~dagger~) + 1); sfxdamage(target[;] self.getvar(~dagger~) + 1);,,NORMAL,,RED,change_power,change_power,,,2,NO,NO,excludefromrandomlists,,self.setvar(~dagger~[;] 1);,self.setvar(~dagger~[;] 1);,self.setvar(~dagger~[;] 1);,,,,,,,,
Divine Throwing Dagger_downgraded,Do [sword]<var:dagger> damage|+[sword]1 each use,2,attack(self.getvar(~dagger~)); self.setvar(~dagger~[;] self.getvar(~dagger~) + 1); sfxdamage(target[;] self.getvar(~dagger~) + 1);,,NORMAL,,RED,change_power,change_power,,,0,NO,NO,excludefromrandomlists,,self.setvar(~dagger~[;] 1);,self.setvar(~dagger~[;] 1);,self.setvar(~dagger~[;] 1);,,,,,,,,
Divine Throwing Dagger_upgraded,Do [sword]<var:dagger> damage|+[sword]3 each use|,2,attack(self.getvar(~dagger~)); self.setvar(~dagger~[;] self.getvar(~dagger~) + 2); sfxdamage(target[;] self.getvar(~dagger~) + 2);,,NORMAL,,RED,change_power,change_power,,,2,NO,NO,excludefromrandomlists,,self.setvar(~dagger~[;] 2);,self.setvar(~dagger~[;] 2);,self.setvar(~dagger~[;] 2);,,,,,,,,
Divine Grip,Get 2 of the difference|Between the dice|,2,var bigdice = 0; var smalldice = 7; for(ad in actualdice) { if(ad.basevalue > bigdice) bigdice = ad.basevalue; if(ad.basevalue < smalldice) smalldice = ad.basevalue; } if((bigdice - smalldice) >= 1) givedice([(bigdice - smalldice)[;](bigdice - smalldice)][;] ~combinedice~);,,NORMAL|NORMAL,,GREEN,reuseable,changetotal9,,,0,YES,NO,,,,,,,,,,,,,
Divine Zap,Drain [heart]<var:hp> health|,2,drain(self.getvar(~hp~)); sfx(~_drain~);,,EVEN|ODD|REQUIRE3,,RED,change_power,noeffect,,,0,NO,NO,,,,,,self.setvar(~hp~[;] target.hp*0.40); e.animate(~flashandshake~);,,,,,,,
Divine Zap_upgraded,Drain [heart]<var:hp> health|,2,drain(self.getvar(~hp~)); sfx(~_drain~);,,EVEN|REQUIRE3,,RED,change_power,noeffect,,,0,NO,NO,,,,,,self.setvar(~hp~[;] target.hp*0.40); e.animate(~flashandshake~);,,,,,,,
Divine Microphone,Do [weaken]<d6> damage|Weaken 2 items,2,attack(d[;] WEAKEN); sfxdamage(target[;] d); inflict(WEAKEN[;] 2); sfx(~_weaken~);,,REQUIRE6,,ORANGE,simplify,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Microphone_downgraded,Do [weaken]<d6> damage,2,attack(d[;] WEAKEN); sfxdamage(target[;] d); sfx(~_weaken~);,,REQUIRE6,,ORANGE,simplify,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Snowhammer,Do [ice]<d6> damage|Freeze 2 dice,2,attack(d[;] ICE); sfxdamage(target[;] d); inflict(ICE[;] 2); sfx(~_ice~);,,REQUIRE6,,BRIGHTCYAN,simplify,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Snowhammer_downgraded,Do [ice]<d6> damage,2,attack(d[;] ICE); sfxdamage(target[;] d); sfx(~_ice~);,,REQUIRE6,,BRIGHTCYAN,simplify,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Fire Axe,Do [fire]<d6> damage|Burn 2 dice,2,attack(d[;] FIRE); sfxdamage(target[;] d); inflict(FIRE[;] 2); sfx(~_fire~);,,REQUIRE6,,RED,simplify,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Fire Axe_downgraded,Do [fire]<d6> damage,2,attack(d[;] FIRE); sfxdamage(target[;] d); sfx(~_fire~);,,REQUIRE6,,RED,simplify,change_power,,,0,NO,NO,,,,,,,,,,,,,
Divine Storm,Inflict [threshold]2_Storm|On enemy,2,inflict(~Storm~[;] 2); sfx(~_curse~);,,COUNTDOWN,9,,threequartercountdown,noeffect,,,0,NO,NO,,,,,,,,,,,,,
Shiny Nose,Inflict [shock]1 shock. If enemy|has red equipment[;] shock|all red equipment instead,2,if(simulation) { inflict(SHOCK); } if(!simulation) { var red = new elements.Equipment(~Fireball~).equipmentcol; var hasred = false; for(eq in self.equipment) { if(eq.equipmentcol == red) { hasred = true; break; } } if(hasred) inflict(~redshift~); else inflict(SHOCK); sfx(~_shock~); },,ODD,,RED,simplify,complicate,,,0,NO,NO,,,,,,,,,,,,,
Antlers,Gain [thorns]2 thorns,2,inflictself(THORNS[;] 2); sfx(~_thorns~);,,COUNTDOWN,10,GREEN,threequartercountdown,,,,0,NO,NO,,,,,,,,,,,,,
Antlers_downgraded,Gain [thorns]1 thorns,2,inflictself(THORNS[;] 1); sfx(~_thorns~);,,COUNTDOWN,10,GREEN,,,,,0,NO,NO,,,,,,,,,,,,,
Antlers_weakened,Gain [thorns]1 thorns,2,inflictself(THORNS[;] 1); sfx(~_thorns~);,,COUNTDOWN,7,GREEN,,,,,0,NO,NO,,,,,,,,,,,,,
Next Volume,Get the second spellbook|Current spellbook: <var:currentspellbook>,1,sfx(~_thinghappens~); var booknum = self.getvar(~currentspellbook~); for(i in 1...7) { if(Spellbook.isempty(i)) { self.setvar(~spellbook~+booknum+~slot~+i[;]~Empty slot~); } else { self.setvar(~spellbook~+booknum+~slot~+i[;]Spellbook.spellname(i)); } } for(eq in self.equipment){ if(eq.name == e.name){ eq.animate(~flashandshake~); } } self.setvar(~currentspellbook~[;]self.getvar(~currentspellbook~) + 1); if(self.getvar(~currentspellbook~) == 4) { self.setvar(~currentspellbook~[;]1); } booknum = self.getvar(~currentspellbook~); for(q in 1...7) { if(self.getvar(~spellbook~+booknum+~slot~+q) != ~Empty slot~) { Spellbook.changespellflash(q[;]self.getvar(~spellbook~+booknum+~slot~+q)); } else { Spellbook.erase(q); } },Time Stop,NORMAL,,GRAY,,,,,-1,YES,NO,excludefromrandomlists|hidereuseable|weakenavoid|curseavoid|altpoisonavoid|shockavoid|cannotsteal,1,inflictself(~silencenextvolume~);,,if(self.getvar(~currentspellbook~) == 1) { e.fulldescription = ~Get the second spellbook[newline]Current spellbook: <var:currentspellbook>~; } else if(self.getvar(~currentspellbook~) == 2) { e.fulldescription = ~Get the third spellbook[newline]Current spellbook: <var:currentspellbook>~; } else if(self.getvar(~currentspellbook~) == 3) { e.fulldescription = ~Get the first spellbook[newline]Current spellbook: <var:currentspellbook>~; },if(self.hasstatus(SILENCE)) { e.availablethisturn = false; e.unavailabletext = ~Unavailable~; e.unavailabledetails = [~Break silence to unlock~]; }if(self.getvar(~currentspellbook~) == 1) { e.fulldescription = ~Get the second spellbook[newline]Current spellbook: <var:currentspellbook>~; } else if(self.getvar(~currentspellbook~) == 2) { e.fulldescription = ~Get the third spellbook[newline]Current spellbook: <var:currentspellbook>~; } else if(self.getvar(~currentspellbook~) == 3) { e.fulldescription = ~Get the first spellbook[newline]Current spellbook: <var:currentspellbook>~; },if(self.getvar(~currentspellbook~) == 1) { e.fulldescription = ~Get the second spellbook[newline]Current spellbook: <var:currentspellbook>~; } else if(self.getvar(~currentspellbook~) == 2) { e.fulldescription = ~Get the third spellbook[newline]Current spellbook: <var:currentspellbook>~; } else if(self.getvar(~currentspellbook~) == 3) { e.fulldescription = ~Get the first spellbook[newline]Current spellbook: <var:currentspellbook>~; },,,,,,
Stolen Heart,-1 dice to enemy this fight[comma]|never roll 5,1,inflictself(~never5~); sfx(~magic_gaindice~); if(!simulation) { target.extradice--; if(target.dice + target.extradice < 1) { target.extradice = 1- target.dice; } },,REQUIRE5|REQUIRE5,,YELLOW,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Stolen Heart_downgraded,Never roll 5,1,inflictself(~never5~); sfx(~magic_gaindice~);,,REQUIRE5|REQUIRE5,,YELLOW,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Stolen Heart_upgraded,-1 dice to enemy this fight[comma]|never roll 5,1,inflictself(~never5~); sfx(~magic_gaindice~); if(!simulation) { target.extradice--; if(target.dice + target.extradice < 1) { target.extradice = 1- target.dice; } },,REQUIRE5,,YELLOW,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Last Word,Survive next fatal blow[comma]|never roll 2,1,inflictself(SURVIVE); sfx(~_survive~); inflictself(~never2~);,,REQUIRE2,,GREEN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Last Word_downgraded,Never roll 2,1,inflictself(~never2~); sfx(~magic_gaindice~);,,REQUIRE2,,GREEN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Last Word_upgraded,Survive next fatal blow[comma]|never roll 2,1,inflictself(SURVIVE); sfx(~_survive~); inflictself(~never2~);,,MAX2,,GREEN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Warming Light,Get immunity to freeze[comma]|never roll 1,1,self.innate.push(~immunefreeze~); sfx(~useitem~); inflictself(~never1~);,,REQUIRE1,,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Warming Light_downgraded,Never roll 1,1,inflictself(~never1~); sfx(~magic_gaindice~);,,REQUIRE1,,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Warming Light_upgraded,Get immunity to freeze[comma]|never roll 1,1,self.innate.push(~immunefreeze~); sfx(~useitem~); inflictself(~never1~);,,MAX2,,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Glass Wall,Add [shield]6 shield[comma]|never roll 4,1,inflictself(SHIELD[;]6); sfx(~_shield~[;]~~[;]0.2); inflictself(~never4~);,,REQUIRE4|REQUIRE4,,ORANGE,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Glass Wall_downgraded,Add [shield]3 shield[comma]|never roll 4,1,inflictself(SHIELD[;]3); sfx(~_shield~[;]~~[;]0.2); inflictself(~never4~);,,REQUIRE4|REQUIRE4,,ORANGE,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Glass Wall_upgraded,Add [shield]6 shield[comma]|never roll 4,1,inflictself(SHIELD[;]6); sfx(~_shield~[;]~~[;]0.2); inflictself(~never4~);,,REQUIRE4,,ORANGE,change_power,change_power,,,0,YES,NO,,,,,,,,,,,,,
Weird Glare,Add [poison]5 poison[comma]|never roll 3,1,inflict(POISON[;]5); sfx(~_poison~[;]~~[;]0.2); inflictself(~never3~);,,REQUIRE3,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Weird Glare_downgraded,Add [poison]3 poison[comma]|never roll 3,1,inflict(POISON[;]3); sfx(~_poison~[;]~~[;]0.2); inflictself(~never3~);,,REQUIRE3,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Weird Glare_upgraded,Add [poison]6 poison[comma]|never roll 3,1,inflict(POISON[;]6); sfx(~_poison~[;]~~[;]0.2); inflictself(~never3~);,,REQUIRE3,,PURPLE,change_power,change_power,,,0,NO,NO,,,,,,,,,,,,,
Stalemate,Do [sword]12 damage[comma]|Inflict [threshold]2 threshold,1,attack(12); inflict(~threshold~[;]2); sfx(~jester_delete~[;]~~[;]0.2); sfxdamage(target[;]12);,,REQUIRE6|REQUIRE6|REQUIRE6,,PINK,change_power,change_function,,,0,NO,NO,,,,,,,,,,,,,
Stalemate_upgraded,Do [sword]14 damage[comma]|Inflict [threshold]2 threshold,1,attack(14); inflict(~threshold~[;]2); sfx(~jester_delete~[;]~~[;]0.2); sfxdamage(target[;]14);,,REQUIRE6|REQUIRE6|REQUIRE6,,PINK,change_power,change_function,,,0,NO,NO,,,,,,,,,,,,,
Stalemate_downgraded,Do [sword]8 damage[comma]|Inflict [threshold]2 threshold,1,attack(8); inflict(~threshold~[;]2); sfx(~jester_delete~[;]~~[;]0.2); sfxdamage(target[;]8);,,REQUIRE6|REQUIRE6|REQUIRE6,,PINK,change_power,change_function,,,0,NO,NO,,,,,,,,,,,,,
Ram,Do [sword]2 damage for|each [jinx]Jinx on enemy,2,attack(getjinx(target) + getjinx(target)); sfxdamage(target[;]getjinx(target) + getjinx(target)); if(getjinx(target) + getjinx(target) <= 0) { bonus(-1000); },Plasma Gun,COUNTDOWN,16,PINK,threequartercountdown,change_power,,,0,NO,NO,,,,,,,,,,,,,
Ram_downgraded,Do [sword]1 damage for|each [jinx]Jinx on enemy,2,attack(getjinx(target)); sfxdamage(target[;]getjinx(target)); if(getjinx(target) <= 0) { bonus(-1000); },Plasma Gun,COUNTDOWN,16,PINK,threequartercountdown,change_power,,,0,NO,NO,,,,,,,,,,,,,
Stomp,Do [shock]<d6> dmg +[shock]Shock[;]|repeat for next [jinx]2 turns,1,jinx(e.name + e.namemodifier[;]~take [shock]%VAR% dmg +[shock]Shock~[;]~Take [shock]%VAR% dmg +[shock]Shock~[;]~attack(%VAR%[;]SHOCK); sfxdamage(target[;]%VAR%); sfx(\~_shock\~[;]\~\~[;]0.2);inflict(SHOCK);~[;]target[;]self[;]2[;]d); jinx(e.name + e.namemodifier[;]~take [shock]%VAR% dmg +[shock]Shock~[;]~Take [shock]%VAR% dmg +[shock]Shock~[;]~attack(%VAR%[;]SHOCK); sfxdamage(target[;]%VAR%); sfx(\~_shock\~[;]\~\~[;]0.2);inflict(SHOCK);~[;]target[;]self[;]3[;]d); attack(d[;]SHOCK); sfxdamage(target[;]d); sfx(~_shock~[;]~~[;]0.1); inflict(SHOCK);,Static Shock,MAX3,,PINK,increaserange,change_power,,,0,NO,NO,,,,,,,,,,,,,
Acceleration Kick,Every third turn[;] reduce all|jinx on the enemy by [jinx]1,1,,Time Stop,,,PINK,,,,,0,NO,NO,excludefromrandomlists|weakenavoid|weakenimmune|shockavoid,,,,,if(turn % 3 == 0) { boostjinxcountdowns(target[;] 1); sfx(~useitem~); e.animate(~flashandshake~); },,,,,,,
Stomp_downgraded,Do [shock]<d6> dmg +[shock]Shock[;]|repeat in [jinx]2 turns,1,jinx(e.name + e.namemodifier[;]~take [shock]%VAR% dmg +[shock]Shock~[;]~Take [shock]%VAR% dmg +[shock]Shock~[;]~attack(%VAR%[;]SHOCK); sfxdamage(target[;]%VAR%); sfx(\~_shock\~[;]\~\~[;]0.2);inflict(SHOCK);~[;]target[;]self[;]3[;]d); attack(d[;]SHOCK); sfxdamage(target[;]d); sfx(~_shock~[;]~~[;]0.1);,Static Shock,MAX3,,PINK,increaserange,change_power,,,0,NO,NO,,,,,,,,,,,,,
A Tool,Each turn[;] guarantee|an [quote]on 6[quote] item|of this size,2,,,,,BLACK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
A Star,Each turn[;] guarantee|a [sword]<double>-with-downside|of this size,1,,,,,BLACK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
A Gun,Each turn[;] guarantee|a multiuse countdown|of this size,1,,,,,BLACK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
A Maneuver,Each turn[;] guarantee|a dice modifier|of this size,1,,,,,BLACK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Super Maneuver,Each turn[;] guarantee|a dice modifier|of this size,2,,,,,BLACK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
A Pole,Each turn[;] guarantee|a countdown weapon|of this size,2,,,,,BLACK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Something Red,Each turn[;] guarantee|something red,1,,,,,RED,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Something Blue,Each turn[;] guarantee|something blue,1,/* considered doing 'something old; */ something new; something borrowed; something blue' but nah,,,,BRIGHTCYAN,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Something Purple,Each turn[;] guarantee|something purple,1,,,,,PURPLE,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Something Orange,Each turn[;] guarantee|something orange,1,,,,,ORANGE,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Something Yellow,Each turn[;] guarantee|something yellow,1,,,,,YELLOW,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Something Green,Each turn[;] guarantee|something green,1,,,,,GREEN,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Something Pink,Each turn[;] guarantee|something pink,1,,,,,PINK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Something Gray,Each turn[;] guarantee|something gray,1,,,,,GRAY,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
A Weapon,Each turn[;] guarantee|a damaging item|of any size,1,,,,,BLACK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Baton Pass_upgraded,Do [sword]3 damage[;] on 5 or 6[;]|increase dmg you do with|each attack by [sword]1 this fight,2,,,NORMAL,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Baton Pass_downgraded,Do [sword]3 damage,2,,,NORMAL,,RED,,,,,0,NO,NO,,,,,,,,,,,,,
Winter Wings,Cost [mana]5: gain [dodge]2 dodge|(Start of turn: gain [mana]1),1,if(getstatusself(MANA) >= 5) { removestatusself(MANA[;]5); inflictself(DODGE[;]2); sfx(~_dodge~); } else { self.textparticle(~No effect!~); },Quick Thinking,NORMAL,,PURPLE,change_power,change_power,,,0,YES,NO,,2,,,,inflictself(MANA); sfx(~_mana~); e.animate(~flashandshake~);,,,,,,,
Winter Wings_upgraded,Cost [mana]4: gain [dodge]2 dodge|(Start of turn: gain [mana]1),1,if(getstatusself(MANA) >= 4) { removestatusself(MANA[;]4); inflictself(DODGE[;]2); sfx(~_dodge~); } else { self.textparticle(~No effect!~); },Quick Thinking,NORMAL,,PURPLE,,,,,0,YES,NO,,,,,,inflictself(MANA); sfx(~_mana~); e.animate(~flashandshake~);,,,,,,,
Winter Wings_downgraded,Cost [mana]7: gain [dodge]2 dodge|(Start of turn: gain [mana]1),1,if(getstatusself(MANA) >= 7) { removestatusself(MANA[;]7); inflictself(DODGE[;]2); sfx(~_dodge~); } else { self.textparticle(~No effect!~); },Quick Thinking,NORMAL,,PURPLE,,,,,0,YES,NO,,,,,,inflictself(MANA); sfx(~_mana~); e.animate(~flashandshake~);,,,,,,,
Endless Winter,In three turns[;] enemy gains|[ice]1 freeze each turn,1,jinx(~Endless Winter~[;]~gain [ice]1 freeze each turn~[;]~Gain [ice]1 freeze each turn~[;]~inflict(\~endlesswinterfreeze\~[;]%VAR%);~[;]target[;]self[;]3[;]1); sfx(~_thinghappens~);,Arctic Storm,ODD,,BLUE,change_power,complicate,,,0,NO,NO,,1,,,,,,,,,,,
Endless Winter_upgraded,In two turns[;] enemy gains|[ice]1 freeze each turn,1,jinx(~Endless Winter+~[;]~gain [ice]1 freeze each turn~[;]~Gain [ice]1 freeze each turn~[;]~inflict(\~endlesswinterfreeze\~[;]%VAR%);~[;]target[;]self[;]2[;]1); sfx(~_thinghappens~);,Arctic Storm,ODD,,BLUE,,,,,0,NO,NO,,,,,,,,,,,,,
Equipment That Does Nothing,Equipment That Does Nothing,1,self.equipmentused--; self.equipmenthistory.pop();,Broken Gadget,NORMAL,,,,,,,0,YES,NO,excludefromrandomlists|cannotsteal|weakenavoid|shockavoid|altpoisonavoid|curseavoid|internal,,,,,,,,,,e.maintainfury = true; e.preventdefault = true;,,
A Flower,Each turn[;] guarantee|a mana equipment|of this size,1,,,,,BLACK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
A Blade,Each turn[;] guarantee|a normal-slot weapon|of this size,2,,,,,BLACK,,,,,0,NO,NO,excludefromrandomlists|themecard,,,,,,,,,,,,
Wheel Of Fortune,Half enemy's max hp|Can't use limit break,2,var max = target.maxhp; target.maxhp -=target.maxhp/2; attack(max/2); sfx(~_magic~);,Catapult,REQUIRE6|REQUIRE6|REQUIRE6,,RED,change_power,noeffect,,,0,NO,NO,,,,,,e.animate(~flashandshake~); inflictself(SILENCE); sfx(~_silence~);,,,,,,,
Wheel Of Fortune_upgraded,Half enemy's max hp|Can't use limit break,2,var max = target.maxhp; target.maxhp -=target.maxhp/2; attack(max); sfx(~_magic~);,Catapult,REQUIRE6|REQUIRE6,,RED,change_power,noeffect,,,0,NO,NO,,,,,,e.animate(~flashandshake~); inflictself(SILENCE); sfx(~_silence~);,,,,,,,
Divine Ooze,Inflict [poison]1 poison|,2,inflict(POISON); sfx(~_poison~);,Poison Arrow,COUNTDOWN,3,PURPLE,halfcountdown,removereusable,,,5,NO,NO,,,,,,,,,,,,,
Cape Deflect,Gain [shield]5 shield|On <var:number> gain [reduce]1 reduce|[80%]Slots change from EVEN & ODD,2,inflictself(SHIELD[;] 5); sfx(~_shield~); if(d == self.getvar(~number~)) { inflictself(REDUCE); },,NORMAL,,ORANGE,change_power,doublerequirements,,,0,YES,NO,,,,,,var oe = rand([~ODD~[;]~EVEN~]); e.changeslots([oe]); e.animate(~flashandshake~); if(oe == ~ODD~) { self.setvar(~number~[;]5); } else { self.setvar(~number~[;]6); },,,,,,,
Cape Deflect_upgraded,Gain [shield]5 shield|Gain [reduce]1 reduce|[80%]Slots change from EVEN & ODD,1,inflictself(SHIELD[;] 5); inflictself(REDUCE); sfx(~_shield~);,,NORMAL,,ORANGE,change_power,doublerequirements,,,0,YES,NO,,,,,,var oe = rand([~ODD~[;]~EVEN~]); e.changeslots([oe]); e.animate(~flashandshake~);,,,,,,,
A Bat,Each turn[;] guarantee|a [sword]<d6>+N-with-downside|of this size,2,,,,,BLACK,,,,,,,,excludefromrandomlists|themecard,,,,,,,,,,,,
A Bonus,Each turn[;] guarantee|a passive item|of this size,1,,,,,BLACK,,,,,,,,excludefromrandomlists|themecard,,,,,,,,,,,,
Priceless Heirloom,Do [sword]<d6>[;] untradeable|[gray](Reuseable),1,attack(d);,Steal,MAX3,,GRAY,increaserange,complicate,,,-1,NO,NO,excludefromrandomlists,,,,,,,,,,,,
